//code modified from https://stackoverflow.com/questions/43583302/peak-detection-for-growing-time-series-using-swift/43607179#43607179

import Glibc // or Darwin/ Foundation/ Cocoa/ UIKit (depending on OS)

// Function to calculate the arithmetic mean
func arithmeticMean(array: [Double]) -> Double {
    var total: Double = 0
    for number in array {
        total += number
    }
    return total / Double(array.count)
}

// Function to calculate the standard deviation
func standardDeviation(array: [Double]) -> Double
{
    let length = Double(array.count)
    let avg = array.reduce(0, {$0 + $1}) / length
    let sumOfSquaredAvgDiff = array.map { pow($0 - avg, 2.0)}.reduce(0, {$0 + $1})
    return sqrt(sumOfSquaredAvgDiff / length)
}

// Function to extract some range from an array
func subArray<T>(array: [T], s: Int, e: Int) -> [T] {
    if e > array.count {
        return []
    }
    return Array(array[s..<min(e, array.count)])
}

// Smooth z-score thresholding filter
func ThresholdingAlgo(y: [Double],lag: Int,threshold: Double,influence: Double) -> ([Int],[Double],[Double]) {

    // Create arrays
    var signals   = Array(repeating: 0, count: y.count)
    var filteredY = Array(repeating: 0.0, count: y.count)
    var avgFilter = Array(repeating: 0.0, count: y.count)
    var stdFilter = Array(repeating: 0.0, count: y.count)

    // Initialise variables
    for i in 0...lag-1 {
        signals[i] = 0
        filteredY[i] = y[i]
    }

    // Start filter
    avgFilter[lag-1] = arithmeticMean(array: subArray(array: y, s: 0, e: lag-1))
    stdFilter[lag-1] = standardDeviation(array: subArray(array: y, s: 0, e: lag-1))

    for i in lag...y.count-1 {
        if abs(y[i] - avgFilter[i-1]) > threshold*stdFilter[i-1] {
            if y[i] > avgFilter[i-1] {
                signals[i] = 1      // Positive signal
            } else {
                // Negative signals are turned off for this application
                //signals[i] = -1       // Negative signal
            }
            filteredY[i] = influence*y[i] + (1-influence)*filteredY[i-1]
        } else {
            signals[i] = 0          // No signal
            filteredY[i] = y[i]
        }
        // Adjust the filters
        avgFilter[i] = arithmeticMean(array: subArray(array: filteredY, s: i-lag, e: i))
        stdFilter[i] = standardDeviation(array: subArray(array: filteredY, s: i-lag, e: i))
    }

    return (signals,avgFilter,stdFilter)
}

// Demo
let samples = [3.55,3.55,3.53,3.52,3.51,3.5,3.49,3.47,3.45,3.44,3.42,3.42,3.4,3.39,3.4,3.39,3.38,3.37,3.34,3.34,3.33,3.33,3.34,3.34,3.34,3.33,3.33,3.33,3.34,3.35,3.35,3.34,3.34,3.36,3.37,3.37,3.37,3.38,3.39,3.41,3.43,3.43,3.43,3.45,3.47,3.46,3.47,3.48,3.49,3.5,3.5,3.51,3.52,3.55,3.55,3.57,3.58,3.58,3.58,3.6,3.61,3.63,3.64,3.65,3.65,3.65,3.65,3.66,3.67,3.68,3.69,3.71,3.72,3.72,3.7,3.73,3.75,3.75,3.76,3.79,3.79,3.8,3.81,3.81,3.82,3.83,3.83,3.85,3.86,3.83,3.86,3.86,3.87,3.87,3.88,3.85,3.83,3.86,3.85,3.83,3.83,3.83,3.84,3.84,3.82,3.81,3.8,3.8,3.79,3.8,3.78,3.76,3.76,3.73,3.72,3.71,3.7,3.7,3.68,3.67,3.65,3.62,3.6,3.59,3.58,3.56,3.53,3.52,3.51,3.49,3.48,3.47,3.46,3.43,3.42,3.4,3.38,3.33,3.33,3.32,3.29,3.28,3.28,3.26,3.25,3.24,3.23,3.22,3.21,3.21,3.2,3.19,3.16,3.14,3.13,3.13,3.12,3.11,3.11,3.11,3.08,3.08,3.07,3.06,3.06,3.06,3.06,3.06,3.06,3.05,3.05,3.08,3.08,3.07,3.06,3.07,3.09,3.08,3.07,3.08,3.08,3.06,3.09,3.09,3.09,3.09,3.12,3.13,3.11,3.12,3.13,3.14,3.13,3.13,3.15,3.16,3.15,3.17,3.18,3.2,3.21,3.22,3.23,3.25,3.26,3.27,3.28,3.28,3.3,3.31,3.33,3.35,3.37,3.39,3.41,3.42,3.45,3.46,3.46,3.48,3.49,3.49,3.49,3.51,3.52,3.53,3.55,3.55,3.57,3.58,3.6,3.6,3.61,3.61,3.61,3.63,3.64,3.64,3.65,3.65,3.66,3.67,3.67,3.68,3.69,3.69,3.69,3.69,3.7,3.7,3.71,3.7,3.7,3.7,3.71,3.71,3.71,3.7,3.7,3.69,3.68,3.67,3.67,3.67,3.65,3.64,3.63,3.61,3.61,3.59,3.56,3.55,3.55,3.53,3.53,3.53,3.52,3.51,3.5,3.48,3.45,3.43,3.43,3.42,3.4,3.39,3.37,3.34,3.33,3.33,3.32,3.31,3.31,3.3,3.29,3.27,3.26,3.26,3.26,3.26,3.25,3.25,3.23,3.22,3.22,3.21,3.2,3.18,3.18,3.17,3.17,3.15,3.15,3.15,3.13,3.13,3.14,3.14,3.12,3.1,3.14,3.12,3.11,3.12,3.11,3.11,3.11,3.1,3.08,3.07,3.08,3.07,3.08,3.07,3.08,3.07,3.08,3.09,3.09,3.1,3.11,3.12,3.12,3.11,3.11,3.11,3.13,3.13,3.13,3.15,3.15,3.16,3.16,3.17,3.17,3.19,3.18,3.18,3.19,3.2,3.21,3.22,3.23,3.23,3.24,3.25,3.25,3.26,3.26,3.27,3.29,3.31,3.32,3.33,3.33,3.33,3.34,3.35,3.36,3.36,3.37,3.38,3.39,3.41,3.41,3.43,3.43,3.46,3.47,3.49,3.49,3.51,3.51,3.52,3.53,3.53,3.54,3.54,3.55,3.55,3.56,3.58,3.57,3.58,3.56,3.56,3.57,3.58,3.57,3.57,3.57,3.58,3.58,3.56,3.54,3.53,3.54,3.53,3.52,3.51,3.5,3.48,3.47,3.45,3.44,3.43,3.43,3.42,3.4,3.39,3.38,3.38,3.36,3.34,3.33,3.32,3.31,3.31,3.3,3.28,3.24,3.24,3.25,3.22,3.22,3.21,3.18,3.15,3.12,3.11,3.13,3.11,3.11,3.1,3.08,3.07,3.05,3.02,3.01,3,3,2.98,2.96,2.95,2.94,2.9,2.91,2.91,2.91,2.9,2.9,2.9,2.9,2.9,2.9,2.89,2.89,2.89,2.88,2.88,2.88,2.91,2.91,2.91,2.9,2.89,2.9,2.92,2.9,2.92,2.92,2.93,2.92,2.92,2.93,2.93,2.92,2.93,2.94,2.95,2.95,2.93,2.94,2.95,2.95,2.95,2.96,2.96,2.96,2.97,2.98,2.98,2.98,2.98,3,3.01,3,3.03,3.04,3.04,3.06,3.08,3.08,3.08,3.08,3.09,3.11,3.12,3.14,3.14,3.13,3.14,3.16,3.16,3.17,3.17,3.17,3.17,3.19,3.21,3.23,3.23,3.24,3.25,3.26,3.26,3.27,3.26,3.27,3.29,3.28,3.3,3.31,3.31,3.3,3.3,3.31,3.32,3.3,3.3,3.31,3.31,3.31,3.31,3.31,3.3,3.32,3.32,3.32,3.31,3.33,3.33,3.31,3.31,3.32,3.31,3.31,3.3,3.29,3.28,3.28,3.28,3.27,3.27,3.27,3.27,3.26,3.27,3.27,3.26,3.25,3.25,3.25,3.25,3.23,3.21,3.22,3.21,3.2,3.2,3.19,3.18,3.18,3.16,3.13,3.11,3.1,3.09,3.08,3.07,3.07,3.04,3.02,3.01,3.01,2.99,2.97,2.98,2.97,2.96,2.95,2.95,2.93,2.91,2.9,2.91,2.9,2.91,2.87,2.87,2.86,2.85,2.85,2.86,2.86,2.85,2.86,2.86,2.86,2.85,2.85,2.84,2.84,2.85,2.85,2.84,2.85,2.85,2.84,2.85,2.85,2.85,2.85,2.86,2.86,2.87,2.89,2.9,2.92,2.92,2.92,2.93,2.93,2.95,2.97,3.01,3.03,3.04,3.06,3.09,3.12,3.14,3.14,3.16,3.19,3.21,3.24,3.26,3.28,3.3,3.37,3.36,3.38,3.4,3.4,3.41,3.41,3.42,3.44,3.45,3.46,3.48,3.49,3.51,3.53,3.54,3.56,3.55,3.57,3.58,3.59,3.6,3.6,3.62,3.63,3.64,3.64,3.64,3.65,3.65,3.64,3.64,3.66,3.66,3.64,3.66,3.66,3.66,3.67,3.67,3.68,3.68,3.68,3.69,3.66,3.67,3.68,3.66,3.66,3.66,3.65,3.64,3.62,3.64,3.65,3.63,3.62,3.63,3.62,3.61,3.59,3.58,3.55,3.55,3.53,3.51,3.5,3.48,3.46,3.44,3.42,3.41,3.4,3.39,3.38,3.36,3.34,3.33,3.31,3.29,3.29,3.28,3.26,3.23,3.22,3.21,3.19,3.16,3.15,3.15,3.13,3.11,3.1,3.08,3.08,3.07,3.06,3.04,3.03,3.01,3,2.99,2.97,2.96,2.94,2.94,2.93,2.91,2.9,2.9,2.9,2.89,2.89,2.89,2.89,2.89,2.9,2.9,2.91,2.92,2.91,2.92,2.92,2.92,2.91,2.92,2.92,2.91,2.9,2.92,2.94,2.95,2.95,2.95,2.96,2.98,3.01,3.01,3.01,3.02,3.07,3.1,3.12,3.14,3.17,3.19,3.22,3.24,3.24,3.26,3.28,3.28,3.31,3.33,3.36,3.4,3.42,3.43,3.43,3.45,3.48,3.48,3.49,3.51,3.54,3.55,3.55,3.56,3.58,3.58,3.58,3.6,3.61,3.63,3.62,3.64,3.64,3.65,3.65,3.66,3.68,3.69,3.69,3.71,3.71,3.72,3.72,3.72,3.71,3.71,3.72,3.72,3.71,3.71,3.7,3.68,3.67,3.66,3.66,3.65,3.65,3.62,3.61,3.58,3.55,3.56,3.55,3.52,3.52,3.51,3.49,3.47,3.45,3.43,3.41,3.41,3.39,3.36,3.33,3.32,3.3,3.28,3.27,3.26,3.26,3.25,3.24,3.22,3.21,3.2,3.19,3.18,3.16,3.17,3.15,3.16,3.15,3.14,3.13,3.13,3.11,3.1,3.1,3.1,3.1,3.1,3.1,3.09,3.1,3.1,3.1,3.1,3.1,3.09,3.08,3.09,3.09,3.1,3.12,3.14,3.16,3.15,3.15,3.16,3.16,3.17,3.19,3.21,3.24,3.27,3.27,3.28,3.3,3.32,3.36,3.39,3.43,3.47,3.5,3.52,3.54,3.54,3.58,3.61,3.63,3.64,3.66,3.68,3.7,3.71,3.73,3.74,3.76,3.78,3.8,3.83,3.84,3.83,3.86,3.86,3.88,3.9,3.91,3.93,3.94,3.93,3.94,3.94,3.94,3.94,3.96,3.94,3.93,3.95,3.96,3.97,3.97,4,4.01,4.01,4.02,4.01,4,3.98,3.98,3.96,3.96,3.96,3.97,3.97,3.97,3.96,3.95,3.94,3.93,3.9,3.9,3.89,3.86,3.85,3.86,3.86,3.85,3.83,3.82,3.83,3.8,3.77,3.75,3.75,3.74,3.73,3.71,3.71,3.71,3.7,3.69,3.67,3.67,3.65,3.64,3.61,3.61,3.6,3.59,3.59,3.58,3.56,3.54,3.54,3.5,3.49,3.48,3.47,3.46,3.43,3.42,3.41,3.38,3.38,3.36,3.35,3.32,3.31,3.28,3.29,3.29,3.27,3.25,3.25,3.25,3.24,3.24,3.24,3.23,3.23,3.23,3.23,3.21,3.23,3.24,3.24,3.24,3.24,3.25,3.25,3.26,3.26,3.28,3.28,3.3,3.3,3.32,3.31,3.32,3.31,3.34,3.35,3.37,3.38,3.4,3.41,3.43,3.43,3.44,3.46,3.48,3.5,3.5,3.51,3.54,3.56,3.58,3.6,3.61,3.61,3.62,3.63,3.64,3.65,3.67,3.67,3.68,3.69,3.7,3.71,3.73,3.74,3.73,3.74,3.74,3.74,3.75,3.75,3.75,3.76,3.77,3.77,3.78,3.77,3.79,3.8,3.8,3.8,3.79,3.79,3.79,3.79,3.79,3.81,3.8,3.8,3.8,3.81,3.79,3.79,3.79,3.8,3.81,3.82,3.82,3.82,3.83,3.82,3.81,3.83,3.81,3.81,3.81,3.79,3.78,3.78,3.76,3.74,3.73,3.74,3.73,3.69,3.68,3.68,3.66,3.64,3.64,3.63,3.61,3.6,3.57,3.55,3.53,3.54,3.54,3.52,3.5,3.48,3.47,3.44,3.43,3.4,3.4,3.38,3.37,3.38,3.36,3.36,3.34,3.33,3.32,3.31,3.3,3.3,3.29,3.29,3.3,3.3,3.29,3.29,3.29,3.29,3.29,3.29,3.29,3.3,3.3,3.3,3.3,3.32,3.33,3.33,3.35,3.37,3.36,3.37,3.4,3.41,3.43,3.44,3.46,3.47,3.48,3.49,3.51,3.52,3.54,3.56,3.58,3.59,3.6,3.61,3.63,3.65,3.67,3.69,3.72,3.73,3.73,3.74,3.74,3.75,3.76,3.77,3.78,3.8,3.82,3.82,3.85,3.84,3.86,3.85,3.85,3.85,3.85,3.85,3.87,3.87,3.88,3.87,3.87,3.86,3.86,3.87,3.86,3.86,3.88,3.89,3.88,3.88,3.87,3.87,3.87,3.85,3.84,3.83,3.82,3.8,3.78,3.77,3.75,3.74,3.74,3.73,3.7,3.69,3.66,3.66,3.64,3.61,3.6,3.59,3.58,3.56,3.54,3.5,3.48,3.47,3.46,3.45,3.43,3.42,3.41,3.36,3.36,3.35,3.33,3.33,3.32,3.31,3.29,3.28,3.26,3.26,3.25,3.25,3.24,3.23,3.23,3.22,3.23,3.24]
let samples2 = [0.9,0.92,0.95,0.99,1.01,1.02,1.04,1.06,1.09,1.1,1.12,1.17,1.19,1.18,1.18,1.19,1.22,1.24,1.25,1.3,1.32,1.31,1.33,1.35,1.4,1.41,1.41,1.44,1.47,1.49,1.49,1.52,1.55,1.57,1.58,1.59,1.61,1.63,1.64,1.64,1.66,1.68,1.69,1.7,1.7,1.7,1.72,1.72,1.69,1.67,1.7,1.68,1.68,1.68,1.68,1.68,1.69,1.67,1.67,1.68,1.67,1.66,1.65,1.62,1.62,1.62,1.63,1.62,1.61,1.6,1.59,1.59,1.57,1.56,1.55,1.55,1.52,1.5,1.5,1.47,1.46,1.46,1.45,1.43,1.39,1.37,1.37,1.36,1.33,1.32,1.3,1.27,1.24,1.22,1.22,1.22,1.18,1.17,1.16,1.14,1.12,1.11,1.11,1.1,1.1,1.09,1.06,1.07,1.07,1.06,1.06,1.08,1.06,1.05,1.04,1.03,1.03,1.03,1.01,1,0.98,0.98,0.98,0.99,0.98,0.98,0.97,0.98,0.98,0.97,0.96,0.97,0.97,0.98,0.98,0.98,0.99,1,1,0.98,1.01,1.03,1.03,1.05,1.08,1.09,1.08,1.09,1.1,1.13,1.16,1.16,1.16,1.18,1.19,1.21,1.23,1.26,1.28,1.29,1.28,1.29,1.3,1.32,1.33,1.33,1.35,1.37,1.39,1.4,1.4,1.42,1.41,1.42,1.43,1.44,1.44,1.46,1.47,1.48,1.48,1.49,1.5,1.52,1.54,1.54,1.53,1.54,1.55,1.55,1.56,1.56,1.56,1.56,1.56,1.56,1.56,1.54,1.55,1.55,1.55,1.55,1.55,1.54,1.52,1.54,1.54,1.52,1.52,1.52,1.52,1.5,1.48,1.48,1.47,1.44,1.44,1.44,1.43,1.41,1.41,1.42,1.42,1.41,1.4,1.38,1.37,1.37,1.36,1.35,1.33,1.31,1.3,1.29,1.29,1.28,1.27,1.27,1.25,1.24,1.24,1.23,1.22,1.2,1.19,1.2,1.19,1.18,1.16,1.16,1.15,1.14,1.14,1.13,1.12,1.11,1.11,1.11,1.12,1.11,1.12,1.11,1.09,1.09,1.09,1.1,1.08,1.08,1.08,1.08,1.08,1.07,1.07,1.07,1.06,1.06,1.07,1.07,1.07,1.06,1.06,1.06,1.07,1.08,1.07,1.07,1.09,1.09,1.09,1.1,1.1,1.11,1.13,1.14,1.14,1.13,1.13,1.14,1.15,1.15,1.16,1.16,1.17,1.19,1.2,1.2,1.21,1.21,1.22,1.23,1.24,1.23,1.24,1.24,1.25,1.25,1.27,1.27,1.28,1.28,1.27,1.28,1.28,1.28,1.29,1.3,1.3,1.28,1.31,1.31,1.3,1.29,1.3,1.31,1.3,1.31,1.31,1.31,1.32,1.32,1.31,1.3,1.31,1.32,1.32,1.33,1.33,1.33,1.31,1.31,1.3,1.29,1.29,1.27,1.26,1.26,1.26,1.25,1.24,1.23,1.21,1.2,1.18,1.17,1.16,1.12,1.11,1.1,1.06,1.04,1.05,1.05,1.03,1,0.98,0.98,0.96,0.95,0.92,0.91,0.87,0.86,0.85,0.85,0.84,0.83,0.82,0.81,0.8,0.78,0.76,0.74,0.73,0.73,0.75,0.74,0.72,0.69,0.68,0.67,0.66,0.65,0.64,0.62,0.61,0.61,0.61,0.6,0.58,0.57,0.58,0.59,0.57,0.58,0.61,0.6,0.58,0.58,0.59,0.59,0.58,0.59,0.59,0.6,0.6,0.61,0.62,0.63,0.64,0.66,0.67,0.68,0.69,0.71,0.72,0.73,0.74,0.77,0.79,0.79,0.79,0.81,0.82,0.83,0.85,0.86,0.87,0.87,0.88,0.9,0.92,0.91,0.91,0.93,0.93,0.94,0.96,0.98,0.99,1,1,1.01,1.03,1.03,1.03,1.05,1.06,1.04,1.04,1.06,1.07,1.08,1.07,1.08,1.08,1.08,1.08,1.08,1.08,1.08,1.08,1.08,1.07,1.07,1.07,1.06,1.06,1.03,1.04,1.03,1.03,1.02,1.02,1.02,0.99,0.97,0.95,0.94,0.93,0.9,0.88,0.87,0.83,0.8,0.79,0.79,0.79,0.77,0.76,0.75,0.74,0.73,0.72,0.71,0.7,0.69,0.69,0.68,0.67,0.66,0.67,0.66,0.65,0.62,0.61,0.61,0.59,0.57,0.58,0.59,0.57,0.54,0.54,0.53,0.54,0.53,0.52,0.51,0.5,0.5,0.51,0.51,0.51,0.51,0.52,0.52,0.52,0.51,0.51,0.5,0.52,0.52,0.52,0.53,0.55,0.54,0.54,0.55,0.56,0.57,0.56,0.55,0.56,0.57,0.57,0.58,0.6,0.62,0.6,0.6,0.62,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.72,0.73,0.73,0.74,0.76,0.76,0.75,0.78,0.78,0.79,0.8,0.81,0.81,0.82,0.81,0.82,0.83,0.84,0.83,0.81,0.83,0.83,0.84,0.85,0.87,0.87,0.85,0.85,0.85,0.86,0.86,0.87,0.87,0.87,0.88,0.89,0.9,0.92,0.92,0.92,0.92,0.91,0.92,0.91,0.9,0.91,0.9,0.89,0.9,0.89,0.89,0.89,0.88,0.89,0.89,0.86,0.87,0.86,0.86,0.87,0.87,0.84,0.82,0.83,0.82,0.82,0.82,0.82,0.81,0.82,0.81,0.81,0.81,0.81,0.8,0.79,0.79,0.78,0.77,0.76,0.74,0.74,0.73,0.71,0.71,0.71,0.7,0.7,0.69,0.67,0.68,0.68,0.67,0.63,0.63,0.63,0.61,0.61,0.63,0.63,0.61,0.6,0.59,0.59,0.59,0.59,0.59,0.59,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.56,0.58,0.57,0.58,0.57,0.57,0.57,0.57,0.57,0.58,0.59,0.58,0.59,0.59,0.59,0.59,0.6,0.61,0.6,0.58,0.6,0.62,0.62,0.62,0.63,0.64,0.64,0.63,0.63,0.65,0.66,0.68,0.69,0.7,0.7,0.7,0.72,0.73,0.73,0.74,0.75,0.75,0.76,0.77,0.78,0.79,0.8,0.81,0.82,0.83,0.84,0.85,0.85,0.85,0.85,0.86,0.87,0.86,0.87,0.88,0.87,0.89,0.9,0.92,0.92,0.92,0.93,0.94,0.95,0.94,0.94,0.95,0.96,0.96,0.98,0.99,1,0.99,1,0.98,0.99,0.99,0.98,0.97,0.97,0.98,0.97,0.98,0.98,0.97,0.98,0.96,0.93,0.94,0.94,0.92,0.91,0.94,0.94,0.91,0.89,0.89,0.9,0.89,0.88,0.88,0.88,0.87,0.86,0.86,0.85,0.85,0.84,0.81,0.81,0.81,0.8,0.79,0.78,0.78,0.78,0.77,0.76,0.77,0.76,0.76,0.75,0.74,0.72,0.71,0.71,0.69,0.67,0.68,0.69,0.69,0.66,0.67,0.66,0.65,0.64,0.64,0.64,0.62,0.62,0.62,0.62,0.62,0.62,0.62,0.61,0.6,0.6,0.6,0.62,0.61,0.6,0.6,0.6,0.6,0.59,0.59,0.59,0.58,0.58,0.58,0.58,0.55,0.55,0.56,0.55,0.56,0.57,0.57,0.56,0.56,0.57,0.56,0.56,0.56,0.57,0.57,0.58,0.59,0.62,0.63,0.63,0.63,0.64,0.65,0.64,0.67,0.67,0.69,0.68,0.69,0.7,0.72,0.72,0.74,0.75,0.76,0.77,0.78,0.79,0.81,0.8,0.82,0.84,0.85,0.87,0.88,0.89,0.9,0.91,0.91,0.91,0.93,0.94,0.95,0.96,0.95,0.95,0.96,0.98,0.99,0.98,0.98,1,1,1,1,1.01,1.02,1.02,1.03,1.03,1.03,1.03,1.04,1.04,1.01,1.03,1.02,1.02,1.01,1.04,1.05,1.03,1.03,1.03,1.04,1.03,1.01,1,0.99,0.98,0.98,0.98,0.98,0.98,0.98,0.96,0.96,0.96,0.97,0.94,0.94,0.94,0.93,0.92,0.91,0.9,0.9,0.89,0.87,0.87,0.86,0.84,0.85,0.86,0.86,0.84,0.82,0.82,0.83,0.82,0.82,0.82,0.81,0.79,0.79,0.79,0.79,0.77,0.78,0.78,0.77,0.76,0.76,0.75,0.74,0.73,0.75,0.73,0.72,0.72,0.71,0.7,0.69,0.7,0.7,0.66,0.66,0.68,0.67,0.67,0.69,0.69,0.68,0.66,0.65,0.65,0.63,0.63,0.62,0.63,0.6,0.6,0.61,0.62,0.62,0.61,0.61,0.61,0.61,0.61,0.6,0.6,0.61,0.61,0.61,0.62,0.62,0.63,0.63,0.62,0.62,0.62,0.62,0.64,0.65,0.65,0.65,0.67,0.68,0.69,0.71,0.72,0.71,0.72,0.72,0.73,0.75,0.75,0.75,0.75,0.76,0.78,0.8,0.8,0.82,0.83,0.83,0.83,0.83,0.83,0.84,0.84,0.85,0.85,0.85,0.87,0.87,0.87,0.88,0.88,0.88,0.88,0.87,0.86,0.87,0.89,0.88,0.9,0.91,0.93,0.92,0.92,0.91,0.91,0.92,0.92,0.91,0.9,0.91,0.93,0.93,0.92,0.91,0.91,0.91,0.91,0.91,0.91,0.9,0.9,0.9,0.91,0.91,0.9,0.89,0.89,0.88,0.88,0.88,0.85,0.86,0.84,0.82,0.82,0.81,0.81,0.79,0.77,0.77,0.77,0.76,0.76,0.75,0.74,0.72,0.71,0.72,0.72,0.7,0.71,0.71,0.69,0.68,0.69,0.7,0.68,0.68,0.67,0.67,0.66,0.65,0.66,0.66,0.64,0.63,0.63,0.62,0.6,0.6,0.6,0.58,0.59,0.6,0.59,0.57,0.56,0.56,0.55,0.54,0.54,0.54,0.53,0.51,0.51,0.5,0.5,0.51,0.5,0.5,0.49,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.48,0.47,0.48,0.49,0.51,0.51,0.51,0.52,0.54,0.53,0.53,0.53,0.53,0.54,0.57,0.58,0.56,0.56,0.58,0.59,0.59,0.61,0.61,0.62,0.62,0.63,0.66,0.67,0.69,0.69,0.7,0.7,0.71,0.71,0.73,0.73,0.74,0.75,0.77,0.78,0.78,0.8,0.81,0.8,0.81,0.81,0.83,0.84,0.83,0.85,0.86,0.87,0.86,0.86,0.86,0.87,0.89,0.89,0.9,0.9,0.9,0.9,0.91,0.92,0.92,0.91,0.89,0.9,0.91,0.89,0.87,0.83,0.84,0.85,0.84,0.84,0.85,0.87,0.86,0.86,0.86,0.85,0.85,0.85,0.84,0.82,0.79,0.78,0.78,0.77,0.75,0.75,0.74,0.72,0.73,0.73,0.73,0.73,0.72,0.71,0.69,0.67,0.67,0.65,0.64,0.64,0.63,0.63,0.62,0.61,0.61,0.61,0.59,0.6,0.61,0.6,0.61,0.63,0.63,0.6,0.59,0.59,0.59,0.59,0.59,0.6,0.59,0.59,0.6,0.6,0.59,0.59,0.59,0.6,0.59,0.58,0.6,0.59,0.6,0.61,0.61,0.61,0.63,0.63,0.66,0.67,0.69,0.68,0.69,0.71,0.71,0.72,0.74,0.75,0.74,0.74,0.76,0.76,0.76,0.77,0.8,0.8,0.78,0.79,0.81,0.81,0.83,0.86,0.87,0.87,0.88,0.9,0.91,0.91,0.91,0.92,0.93,0.94,0.95,0.94,0.94,0.95,0.96,0.94,0.95,0.97,0.98,0.97,0.98,0.98,0.98,0.99,1,0.98,0.98,0.98,0.99,1,1,0.98,0.99,0.99,0.99,0.99,1,0.98,0.99,0.99,0.98,0.98,1,0.98,0.96,0.97,0.95,0.95,0.96,0.97,0.94,0.92,0.91,0.91,0.91,0.9,0.9,0.9,0.88,0.88,0.88,0.89,0.88,0.88,0.87,0.86,0.85,0.84,0.83,0.82,0.83,0.82,0.82,0.81,0.81,0.81,0.82,0.8,0.78,0.8,0.77,0.75,0.76,0.78,0.76,0.73,0.73,0.73,0.73,0.74,0.73,0.72,0.7,0.69,0.68,0.68,0.68,0.69,0.68,0.69,0.68,0.68,0.69,0.68,0.68,0.68,0.67,0.66,0.67,0.67,0.66,0.65,0.66,0.66,0.65,0.63,0.64,0.66,0.63,0.63,0.65,0.64,0.62,0.61,0.61,0.62,0.61,0.61,0.62,0.62,0.61,0.61,0.62,0.62,0.62,0.63,0.63,0.63,0.63,0.64,0.65,0.66,0.66,0.67,0.67,0.68,0.69,0.68,0.69,0.7,0.71,0.71,0.72,0.73,0.74,0.72,0.73,0.73,0.73,0.75,0.75,0.76,0.76,0.75,0.77,0.78,0.77,0.77,0.77,0.78,0.77,0.79,0.81,0.82,0.83,0.83,0.83,0.84,0.84,0.85,0.84,0.85,0.85,0.86,0.88,0.88,0.88,0.88,0.88,0.89,0.9,0.89,0.87,0.91,0.89,0.88,0.88,0.9,0.9,0.9,0.9,0.89,0.9,0.91,0.89,0.9,0.89,0.89,0.9,0.91,0.91,0.9,0.9,0.89,0.87,0.87,0.88,0.87,0.87,0.86,0.86,0.85,0.84,0.83,0.83,0.82,0.8,0.77,0.76,0.76,0.74,0.75,0.76,0.75,0.73,0.72,0.71,0.7,0.7,0.7,0.69,0.68,0.66,0.64,0.65,0.65,0.65,0.65,0.64,0.63,0.62,0.62,0.62,0.61,0.61,0.6,0.6,0.6,0.6,0.59,0.58,0.58,0.58,0.57,0.57,0.56,0.54,0.55,0.54,0.53,0.54,0.56,0.55,0.54,0.53,0.54,0.54,0.53,0.54,0.54,0.53,0.53,0.53,0.54,0.54,0.54,0.55,0.55,0.55,0.55,0.54,0.54,0.54,0.54,0.54,0.54,0.54,0.54,0.55,0.56,0.57,0.56,0.56,0.57,0.58,0.57,0.56,0.58,0.59,0.57,0.59,0.61,0.61,0.6,0.6,0.61,0.63,0.62,0.62,0.64,0.64,0.65,0.67,0.68,0.69,0.69,0.71,0.71,0.71,0.72,0.72,0.73,0.73,0.74,0.75,0.76,0.75,0.75,0.76,0.76,0.77,0.77,0.76,0.78,0.79,0.78,0.79,0.8,0.81,0.81,0.81,0.81,0.82,0.83,0.82,0.82,0.83,0.83,0.84,0.86,0.87,0.86,0.86,0.86,0.86,0.87,0.86,0.86,0.85,0.86,0.86,0.86,0.87,0.87,0.88,0.86,0.86,0.86,0.84,0.84,0.85,0.87,0.86,0.84,0.84,0.82,0.82,0.82,0.81,0.82,0.81,0.8,0.8,0.8,0.8,0.8,0.8,0.78,0.77,0.77,0.76,0.76,0.77,0.77,0.76,0.76,0.76,0.74,0.74,0.73,0.71,0.72,0.71,0.7,0.71,0.72,0.7,0.68,0.66,0.66,0.66,0.66,0.66,0.66,0.65,0.64,0.64,0.65,0.65,0.65,0.65,0.64,0.64,0.63,0.63,0.63,0.62,0.63,0.62,0.62,0.61,0.62,0.61,0.6,0.6,0.61,0.6,0.59,0.61,0.6,0.59,0.6,0.6,0.58,0.56,0.57,0.58,0.58,0.58,0.58,0.58,0.58,0.58,0.59,0.59,0.59,0.6,0.59,0.6,0.59,0.6,0.6,0.6,0.61,0.63,0.64,0.63,0.64,0.65,0.66,0.67,0.68,0.69,0.7,0.7,0.7,0.7,0.71,0.73,0.73,0.75,0.77,0.76,0.77,0.77,0.78,0.78,0.78,0.79,0.8,0.81,0.82,0.83,0.85,0.86,0.86,0.87,0.88,0.88,0.89,0.9,0.9,0.9,0.91,0.93,0.94,0.93,0.93,0.95,0.95,0.95,0.95,0.94,0.93,0.94,0.94,0.94,0.94,0.96,0.94,0.95,0.94,0.93,0.94,0.94,0.94,0.93,0.94,0.93,0.93,0.91,0.91,0.91,0.9,0.9,0.89,0.88,0.87,0.87,0.87,0.86,0.86,0.86,0.85,0.84,0.83,0.84,0.81,0.79,0.8,0.79,0.78,0.79,0.8,0.78,0.75,0.74,0.75,0.75,0.74,0.73,0.72,0.72,0.7,0.71,0.71,0.71,0.69,0.69,0.69,0.69,0.69,0.68,0.69,0.69,0.68,0.67,0.68,0.67,0.68,0.67,0.66,0.65,0.66,0.66,0.63,0.65,0.66,0.64,0.64,0.66,0.65,0.64,0.62,0.62,0.63,0.63,0.63,0.63,0.63,0.62,0.61,0.62,0.62,0.62,0.61,0.61,0.62,0.61,0.6,0.61,0.61,0.61,0.61,0.61,0.61,0.61,0.61,0.61,0.63,0.63,0.62,0.62,0.63,0.62,0.61,0.62,0.63,0.64,0.66,0.67,0.66,0.66,0.66,0.67,0.68,0.69,0.7,0.71,0.71,0.72,0.74,0.75,0.75,0.75,0.77,0.78,0.77,0.78,0.79,0.8,0.8,0.81,0.81,0.81,0.82,0.82,0.82,0.83,0.83,0.82,0.84,0.84,0.84,0.84,0.85,0.87,0.87,0.87,0.88,0.87,0.87,0.88,0.89,0.88,0.89,0.9,0.91,0.91,0.91,0.91,0.91,0.92,0.92,0.92,0.92,0.92,0.94,0.93,0.93,0.94,0.95,0.95,0.92,0.91,0.93,0.92,0.91,0.9,0.92,0.92,0.91,0.92,0.91,0.92,0.91,0.91,0.9,0.9,0.89,0.89,0.89,0.89,0.89,0.88,0.88,0.86,0.85,0.84,0.84,0.85,0.84,0.84,0.83,0.82,0.81,0.8,0.77,0.78,0.75,0.74,0.75,0.77,0.75,0.73,0.71,0.7,0.71,0.7,0.7,0.69,0.68,0.67,0.67,0.68,0.69,0.68,0.68,0.68]

// Run filter
let (signals,avgFilter,stdFilter) = ThresholdingAlgo(y: samples2, lag: 90, threshold: 1.3, influence: 1)
// Print output to console
print("\nOutput: \n ")
for i in 0...signals.count - 1 {
    print("Data point \(i)\t\t sample: \(samples2[i]) \t signal: \(signals[i])\n")
}

// Raw data for creating a plot in Excel
print("\n \n Raw data for creating a plot in Excel: \n ")
for i in 0...signals.count - 1 {
    print("\(i+1)\t\(samples2[i])\t\(signals[i])\t\(avgFilter[i])\t\(stdFilter[i])\n")
}
